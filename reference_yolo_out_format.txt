# scripts/add_yolo_bbox.py
import numpy as np, torch
from ultralytics import YOLO
from tqdm import tqdm
from lerobot.common.datasets.lerobot_dataset import LeRobotDataset

MAX_BOXES = 5   # 只保留前 5 个目标
model = YOLO('yolov8n.pt')  # 轻量版

ds = LeRobotDataset('local/so100_pick_cube_local', root='C:/LeRobot/data')
new_ft = {
    "observation.yolo_bbox": {
        "dtype": "float32",
        "shape": (MAX_BOXES, 6),  # (cx, cy, w, h, class_id, conf)
        "names": ["cx","cy","w","h","cls","conf"]
    }
}
# --------- 更新 features -----------
info = ds.meta.info
info["features"].update(new_ft)
ds.meta.info = info
ds.meta.write_info(info, ds.root)   # 覆盖 meta/info.json
# -----------------------------------

for ep in tqdm(range(ds.num_episodes), desc='episodes'):
    ep_buf = ds.create_episode_buffer(ep)
    vid_key = ds.meta.camera_keys[0]          # 用第一只相机即可
    ep_slice = ds.hf_dataset.select_columns([vid_key]).\
                   select(range(ds.episode_data_index['from'][ep],
                                ds.episode_data_index['to'][ep]))

    for i, sample in enumerate(tqdm(ep_slice, leave=False)):
        frame = sample[vid_key]               # torch (C,H,W) float32 0~1
        img = (frame*255).permute(1,2,0).byte().numpy()  # np uint8 (H,W,C)

        result = model(img, verbose=False)[0]
        boxes = result.boxes.xywhn.cpu().numpy()   # cx,cy,w,h (0~1)
        cls   = result.boxes.cls.cpu().numpy()
        conf  = result.boxes.conf.cpu().numpy()
        sel   = np.argsort(-conf)[:MAX_BOXES]

        bbox = np.zeros((MAX_BOXES,6), dtype=np.float32)
        if len(sel):
            bbox[:len(sel), :4] = boxes[sel]
            bbox[:len(sel), 4]  = cls[sel]
            bbox[:len(sel), 5]  = conf[sel]

        ep_buf["observation.yolo_bbox"].append(bbox)
        # 把其它原有字段复制进来……
        for k in ds.features:
            if k in ["observation.yolo_bbox"]: continue
            ep_buf.setdefault(k, []).append(sample[k])

        ep_buf["size"] += 1
        ep_buf["task"].append("Grasp a cube and drop it.")  # 保持原标签

    ds.episode_buffer = ep_buf
    ds.save_episode()
